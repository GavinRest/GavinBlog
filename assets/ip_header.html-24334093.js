import{_ as e,p as i,q as t,a1 as a}from"./framework-5866ffd3.js";const r="/assets/ip_header-c6aca882.png",n={},l=a('<h1 id="ip-packet-header" tabindex="-1"><a class="header-anchor" href="#ip-packet-header" aria-hidden="true">#</a> ip Packet Header</h1><blockquote><p>IP Packet Header 长度一般为20-60字节(Byte)。前20字节固定，后40字节可选长度不固定。</p></blockquote><h3 id="ip-packet-header-结构图" tabindex="-1"><a class="header-anchor" href="#ip-packet-header-结构图" aria-hidden="true">#</a> IP Packet Header 结构图</h3><hr><p><img src="'+r+`" alt="ip_header"></p><h3 id="关键字段介绍" tabindex="-1"><a class="header-anchor" href="#关键字段介绍" aria-hidden="true">#</a> 关键字段介绍</h3><hr><ul><li><p>IHL(Internet Header Length )： 头长度</p><ul><li><p>IHL范围：5 - 15 个 <strong>32位字的数量</strong>，二进制表示 0101 - 1111。</p><ul><li>最小长度：5 * 32bit = 160bit = 20byte</li><li>最大长度：15 * 32bit = 480bit = 60byte</li></ul></li><li><p>Intemet头部长度(IHL)字段保存IPv4头部中<strong>32位字的数量</strong>,包括任何选项。由于它 是一个4位的字段,所以IPv4头部被限制为最多15个32位字,即60字节。后面,我们将 看到,这种限制使一些选项(例如“记录路由”选项)当前几乎无法使用。这个字段的正常 值(当没有选项时)是50 1Pv6中不存在这个字段,其头部长度固定为40字节。</p></li></ul></li><li><p>DS + ECN：早起叫做 TOS 字段，由于它们从来<strong>没被广泛使用</strong>,因此最终这个8位长的字段被分为两个部分,并由一组 RFC 重新定义。目前,前6位被称为区分服务字段(DS字段),后2位是显式拥塞通知 (ECN)字段或指示位。</p><ul><li>DSCP:DS字段中的数字称为区分服务代码点(DSCP)。</li><li>ECN:后面2位用作ECN,当数据报通过持续拥塞的路由器时设置。<strong>无损网络中常用到该字段。</strong></li></ul></li></ul><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code># DS + ECN 摘自 wireshark
Differentiated Services Field: 0x00 (DSCP: CS0, ECN: Not-ECT)
0000 00.. = Differentiated Services Codepoint: Default (0)
.... ..00 = Explicit Congestion Notification: Not ECN-Capable Transport (0)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><p>标识字段：标识字段帮助标识由IPv4主机发送的数据报。为了避免将一个数据报分片和其他数据 报分片混淆,发送主机通常在每次(从它的一个IP地址)发送数据报时都将一个内部计数器 加1,并将该计数器值复制到IPv4标识字段。<strong>这个字段对实现分片很重要</strong>。</p></li><li><p>Flags: 0x00（摘自 wireshark）</p></li></ul><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>- 0... .... = Reserved bit: Not set			// 保留位
.0.. .... = Don&#39;t fragment: Not set		// 不分片
..0. .... = More fragments: Not set   	// 被分片的包除最后一个均为1。
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,11),s=[l];function d(c,o){return i(),t("div",null,s)}const h=e(n,[["render",d],["__file","ip_header.html.vue"]]);export{h as default};
