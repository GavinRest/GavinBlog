import{_ as e,p as s,q as i,a1 as a}from"./framework-5866ffd3.js";const t="/assets/wireshark_pipe-9975e9ac.png",r="/assets/wireshark_sshdump_display_interface-96f7647c.png",n="/assets/wireshark_sshdump_config-fdd0ee8a.png",d="/assets/wireshark_sshdump_capture-1123c00c.png",l={},c=a(`<h1 id="wireshark-远程分析" tabindex="-1"><a class="header-anchor" href="#wireshark-远程分析" aria-hidden="true">#</a> wireshark 远程分析</h1><p>远程抓包 down 到本地分析相对会比较麻烦，有些场景需要本地 wireshark 时时分析 remote server 数据包。主要有以下三种方法。</p><h3 id="一、匿名管道" tabindex="-1"><a class="header-anchor" href="#一、匿名管道" aria-hidden="true">#</a> 一、匿名管道</h3><p>ssh + wireshark + tcpdump</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>ssh root@172.16.147.136 &quot;tcpdump -s0 -w- -i ens38 &#39;not port 22&#39;&quot; | wireshark -k -i -
    -s snaplen
      --snapshot-length=snaplen
	-w- 告诉 tcpdump 将二进制数据写入 stdout
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="二、命名管道" tabindex="-1"><a class="header-anchor" href="#二、命名管道" aria-hidden="true">#</a> 二、命名管道</h3><ul><li>创建一个命名管道</li></ul><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>mkfifo /tmp/remote
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>管道读取方式1：cli 读取</li></ul><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>wireshark -k -i /tmp/remote
  -k  start capturing immediately (def: do nothing)
  -i &lt;interface&gt;, --interface &lt;interface&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>管道读取方式2：gui 读取</li></ul><p><img src="`+t+`" alt="wireshark_pipe"></p><ul><li>ssh tcpdump 将数据包重定向到命名管道</li></ul><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>ssh root@172.16.147.136 &quot;tcpdump -s0 -n -w- -i ens38&quot; &gt; /tmp/remote
  -s snaplen
    --snapshot-length=snaplen
  -w- 告诉 tcpdump 将二进制数据写入 stdout
    -i &lt;interface&gt;, --interface &lt;interface&gt;
    -n Don&#39;t convert addresses (i.e., host addresses, port numbers, etc.) to names.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="三、sshdump" tabindex="-1"><a class="header-anchor" href="#三、sshdump" aria-hidden="true">#</a> 三、sshdump</h3><ul><li>显示所有接口，点击齿轮配置 sshdump</li></ul><p><img src="`+r+'" alt="sshdump_display_interface"></p><ul><li>配置 sshdump 认证（切换混杂模式需要 root 权限，所以需要以root身份登录）</li></ul><p><img src="'+n+'" alt="wireshark_sshdump_config"></p><ul><li>配置 capture</li></ul><p><img src="'+d+'" alt="wireshark_sshdump_capture"></p>',21),u=[c];function p(o,m){return s(),i("div",null,u)}const v=e(l,[["render",p],["__file","wireshark_remote_capture.html.vue"]]);export{v as default};
